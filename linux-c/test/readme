可变参数用到以下宏函数  
 <1>原型： void va_start(va_list arg_ptr,prev_param);
    功能：以固定参数的地址为起点确定变参的内存起始地址，获取第一个参数的首地址
    返回值：无

 <2>原型：va_list 类型的变量，va_list arg_ptr ,这个变量是指向参数地址的指针，因为得到参数的地址之后，再结合参数的类型，才能得到参数的值。

 <3>原型：type va_arg(va_list arg_ptr,type);
  功能：获取下一个参数的地址
  返回值：根据传入参数类型决定返回值类型

 <4>原型：void  va_end(va_list arg_ptr);
  功能：将arg_ptr指针置0
  返回值：无

使用可变参数应该有以下步骤：
     ⑴在程序中将用到以下这些宏:
    void va_start( va_list arg_ptr, prev_param );
    type va_arg( va_list arg_ptr, type );
    void va_end( va_list arg_ptr );

    va在这里是variable-argument(可变参数)的意思.
    这些宏定义在stdarg.h中,所以用到可变参数的程序应该包含这个头文件.
    ⑵函数里首先定义一个va_list型的变量,这里是arg_ptr,这个变量是指向参数地址的指针.因为得到参数的地址之后，再结合参数的类型，才能得到参数的值。
    ⑶然后用va_start宏初始化⑵中定义的变量arg_ptr,这个宏的第二个参数是可变参数列表的前一个参数,也就是最后一个固定参数。
    ⑷然后依次用va_arg宏使arg_ptr返回可变参数的地址,得到这个地址之后，结合参数的类型，就可以得到参数的值。然后进行输出。
    ⑸设定结束条件，这里的条件就是判断参数值是否为-1。注意被调的函数在调用时是不知道可变参数的正确数目的，程序员必须自己在代码中指明结束条件。
